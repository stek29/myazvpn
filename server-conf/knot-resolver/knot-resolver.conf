-- Network interface configuration
net.listen('10.221.0.1', 53, { kind = 'dns', freebind = true })

-- Load useful modules
modules = {
  'hints > iterate',  -- Allow loading /etc/hosts or custom root hints
  'stats',            -- Track internal statistics
  'predict',          -- Prefetch expiring/frequent records
}

-- Cache size
cache.size = 100 * MB

-- minimum TTL = 2 minutes
cache.min_ttl(120)

-- set default (empty) value
blocked_hosts = {}

-- load AZ aliases
dofile('/etc/knot-resolver/az-aliases.lua')

-- forward blocked hosts to dnsmap resolver
policy.add(
    policy.suffix(
        policy.STUB({'127.0.0.4'}),
        policy.todnames(blocked_hosts)))

-- forward Russian zones to Yandex DNS since many Russian domains
-- are blocked from outside Russia nowadays
policy.add(
  policy.suffix(
    policy.FORWARD({'77.88.8.8'}),
    policy.todnames({
      'ru.', -- ru
      'su.', -- su
      'xn--p1ai.', -- рф
      'xn--p1acf.', -- рус
      'xn--80adxhks.', -- москва
      'xn--80asehdb.', -- онлайн
      'xn--80aswg.', -- сайт
      'xn--d1acj3b.', -- дети
    })))

-- block apple private dns / apple private relay
-- since it evades this whole scheme
policy.add(
    policy.domains(
        policy.DROP,
        policy.todnames({
            'mask.icloud.com.',
            'mask-h2.icloud.com.',
            'mask-canary.icloud.com.',
            'mask.apple-dns.net.',
        })))

-- TLS_FORWARD to Google Public DNS and Cloudflare DNS by default
policy.add(
  policy.all(
    policy.TLS_FORWARD({
        {'8.8.8.8', hostname='dns.google'},
        {'1.1.1.1', hostname='cloudflare-dns.com'},
      })))
